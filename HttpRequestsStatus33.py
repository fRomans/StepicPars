import requests

#
# 1.Вашей задачей является написание кода, который будет выполнять сетевые запросы к указанному диапазону веб-страниц
# и суммировать HTTP статус-коды всех полученных ответов.
# url = "https://parsinger.ru/3.3/2/"
# i = 1
# sum = 0
# while i<= 200:
#     response = requests.get(url + str(i)+".html")
#     print(url + str(i)+".html")
#     sum = sum+response.status_code
#     i=i+1
#     print(sum)


# ___________________________________________________
#
# 2.Вашей задачей является создание скрипта, который делает сетевые запросы к указанному диапазону ссылок для выявления
# единственной рабочей страницы и поиска кода на ней. Для этого необходимо считывать HTTP статус-код каждой страницы.

# url = "https://parsinger.ru/3.3/1/"
# i = 1
# h = 0
# while i <= 200:
#     url2 = url + str(i) + ".html"
#     response = requests.get(url2)
#     # print(i)
#     i = i+1
#     if response.status_code == 200:
#         print(response.text)


# ___________________________________________________
# 3.Вашей задачей является создание Python-скрипта, который будет выполнять сетевые запросы к указанным изображениям
# и определять размер каждого файла без его скачивания. Задача заключается в определении самого большого
# изображения по размеру.
# name_img = ['1663231240183817644.jpg',
#             '1663231245165469794.jpg',
#             '1663231252148267596.jpg',
#             '16632460271311817.jpg',
#             '1663260860165832550.jpg',
#             '1663260862112644405.jpg',
#             '1663260864114071369.jpg',
#             '1663260869127473152.jpg',
#             '1663260874115452216.jpg',
#             '1663260877136512181.jpg',
#             '1663260878140464277.jpg',
#             '1663267600193799276.jpg',
#             '1663267613117130673.jpg',
#             '1663267619197170483.jpg',
#             '1663267626154597739.jpg',
#             '1663267648135114690.jpg',
#             '166326765416196421.jpg',
#             '1663267662118079649.jpg',
#             '1663267668165066872.jpg',
#             '1663267878176341940.jpg',
#             '166326990115068678.jpg',
#             '1663269922185881885.jpg',
#             '1663269927127433209.jpg',
#             '1663269942143420441.jpg',
#             '1663269946174943071.jpg',
#             '1663269964195277579.jpg',
#             '1663269970148058649.jpg',
#             '1663269974197750992.jpg',
#             '166326997917397750.jpg',
#             '1663270039138442380.jpg',
#             '1663388012194470737.jpg',
#             '166342371029995280.jpg',
#             '1663423712288242036.jpg',
#             '1663423715255612089.jpg',
#             '1663423720221155166.jpg',
#             '1663423722211139858.jpg',
#             '1663423724211218483.jpg',
#             '1663423728215479371.jpg',
#             '1663423729298828299.jpg',
#             '1663423732225964403.jpg',
#             '1663424198111663025.jpg',
#             '1663424199157537861.jpg',
#             '1663424200184778832.jpg',
#             '166342420214123494.jpg',
#             '166342420317539591.jpg',
#             '1663424204161674559.jpg',
#             '1663424206188873432.jpg',
#             '166342420813193185.jpg',
#             '1663424209187179962.jpg',
#             '1663424212162573102.jpg']
# url = "https://parsinger.ru/3.3/3/img/"
# razm1: int = 0
# urlImg = " "
# for i in name_img:
#
#     url2 = url + str(i)
#     response = requests.get(url2)
#     y: int = int(response.headers.get('Content-Length'))
#     if y > razm1:
#         razm1 = y
#         urlImg = url2
#
# print(razm1)
# print(urlImg)

# ___________________________________________________
# 4.Целью этой задачи является определение первой и последней доступных страниц в заданном диапазоне URL-адресов.
import self as self

url = "https://parsinger.ru/3.3/4/"
i = 1
size = 0
name_img = []
while i <= 100:
    url3 = str(i) + ".html"
    url2 = url + url3
    response = requests.get(url2)
    el = i
    i = i+1
    if response.status_code == 200:
        name_img.append(url3)
        size = size+1

print(size)
first_available_page = name_img[0]
last_available_page = name_img[39]

print(f"Первая доступная страница: {first_available_page}")
print(f"Последняя доступная страница: {last_available_page}")